"use strict";(self.webpackChunkfk_api_platform_docs=self.webpackChunkfk_api_platform_docs||[]).push([[1871],{91849:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var l=a(87462),n=(a(67294),a(3905));const r={sidebar_position:7},s="Order Management API",i={unversionedId:"order-management-intro",id:"order-management-intro",title:"Order Management API",description:"To access and test the Order Management pull APIs in sandbox, click here",source:"@site/docs/order-management-intro.md",sourceDirName:".",slug:"/order-management-intro",permalink:"/fk-api-platform-docs/docs/order-management-intro",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Flipkart Marketplace Seller FTP",permalink:"/fk-api-platform-docs/docs/seller-ftp"},next:{title:"Order Management Notification Service",permalink:"/fk-api-platform-docs/docs/order-management-notifications"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Standard Fulfilment",id:"standard-fulfilment",level:2},{value:"Self Ship Fulfilment",id:"self-ship-fulfilment",level:2},{value:"Complete List of Order Management Pull APIs",id:"complete-list-of-order-management-pull-apis",level:2}],p={toc:d},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"order-management-api"},"Order Management API"),(0,n.kt)("admonition",{title:"APIs",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"To access and test the Order Management pull APIs in sandbox, ",(0,n.kt)("a",{parentName:"p",href:"/docs/mp-api_versioned/shipment-v-3"},"click here"))),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"This section familiarizes you with the different types of order fulfilment workflows and their corresponding APIs. Let\u2019s first understand a few basic terminologies around orders:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Order")," : An order represents all the products that a customer has ordered in a checkout session. One order can have multiple products which can be fulfilled by different sellers on the marketplace."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Order Item")," : An order item represents a particular product in a given order. An order item can have multiple quantities of a product in it."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Shipment")," : A shipment is a group of order items that the seller needs to pick, pack and handover together to a logistics partner.")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://img1a.flixcart.com/fk-sp-static/images/order-terminologies.png",alt:"Alt text"}),(0,n.kt)("br",null)),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"A single customer order can be splitted into multiple shipments even though all the products are from the same seller."),(0,n.kt)("li",{parentName:"ul"},"A shipment can have multiple order item ids(products) of the same order/customer."),(0,n.kt)("li",{parentName:"ul"},"A shipment cannot have order item ids of multiple orders/customers."))),(0,n.kt)("p",null,"Most of the Flipkart Order Management API interactions happen on the shipment as this is the logical unit that the seller needs to pick, pack and handover together to a logistics partner."),(0,n.kt)("p",null,"Once the customer places an order on a seller\u2019s listing, Flipkart systems decide on which location (i.e if the seller has the same listing across multiple locations) of the seller this order needs to go basis the fastest delivery time to the customer. Hence, every order is allocated to a seller location and the seller has to fulfil that order via the same location."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"There is no construct of order acceptance via seller i.e if the seller has a positive inventory for a listing on a location and if a customer places the order on that listing then the seller has to fulfil that order via the Flipkart decided location."),(0,n.kt)("li",{parentName:"ul"},"Failing to process orders will lead to seller account/location level actions and the seller will not be allowed to sell on Flipkart for some duration of time."))),(0,n.kt)("p",null,"Once the order is placed by the customer it is assigned to the seller location for the fulfilment. As of now, Flipkart supports two types of order fulfilment workflows via APIs."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Standard Fulfilment")," : This is the fulfilment where logistics of order fulfilment is taken care of by Flipkart. The seller has to just pack and handover the products to the Flipkart assigned delivery partner."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Self Ship Fulfilment")," : This is the fulfilment order where logistics of order fulfilment is taken care by Seller himself i.e seller packs, dispatches, delivers, and handles post-delivery services of an order on its own.")),(0,n.kt)("h2",{id:"standard-fulfilment"},"Standard Fulfilment"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Toggle me!"),(0,n.kt)("div",null,(0,n.kt)("div",null,(0,n.kt)("p",null,"This section familiarizes you with the standard order fulfilment workflow with possible seller actions and their corresponding APIs."),(0,n.kt)("p",null,"As mentioned in the earlier section most of the Flipkart API interactions happen on the shipment as this is the logical unit that the seller needs to pick, pack and handover together to a logistics partner."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Forward Flow")),(0,n.kt)("a",{href:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-fwd-flow.png"},(0,n.kt)("img",{alt:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-fwd-flow.png",className:"align-center",src:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-fwd-flow.png"})),(0,n.kt)("br",null),(0,n.kt)("p",null,"Following are the different states of the shipments and possible seller actions against each state:"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"APPROVED"),":"),(0,n.kt)("p",null,"All the new orders that the seller needs to process from a seller location are in this status at the start. Sellers can fetch these orders via calling the following APIs or by subscribing to order notification service. Please note that API is at shipment level and multiple order item ids can be part of once shipment."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/(shipmentIds)"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"shipment-created-notification"},(0,n.kt)("span",{className:"std std-ref"},"Shipment Created"))),(0,n.kt)("p",{className:"first admonition-title"},(0,n.kt)("span",null,"Note")),(0,n.kt)("p",null,"All the shipment/order related updates like state changes, important order attribute changes etc. can be fetched in 2 ways:"),(0,n.kt)("ul",{className:"last simple"},(0,n.kt)("li",null,"Sellers calling Flipkart APIs in periodic intervals [Pull mechanism]."),(0,n.kt)("li",null,"Sellers subscribing to Flipkart Notification Service [Push mechanism].")),(0,n.kt)("p",null,"Once the seller receives these shipment details, the seller should check"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"dispatchAfterDate"))," ","and"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"hold"))," ","status of the shipment."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Dispatch After Date")," : Sellers can not process all the shipments immediately. A shipment is actionable only after decided timestamp"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"dispatchAfterDate")),". Flipkart owns the logic of calculating this timestamp basis the various factors like logistic partner fulfilment capacity etc."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Hold shipments")," : These are the shipments which Flipkart has put onhold and are not available for further processing by the sellers. This is done for shipments where Flipkart wants to verify certain details of the order before allowing the seller to process the orders."),(0,n.kt)("p",null,"Sellers can only act on the shipment after the"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"dispatchAfterDate"))," ","and when the"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"hold"))," ","status is FALSE. Sellers can get these two details in the shipment payload calling the above API or by subscribing to order notification service."),(0,n.kt)("p",null,"Once the"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"hold"))," ","status of the shipment has moved to the false and if the current date is after"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"dispatchAfterDate"))," ","sellers can start processing the shipment."),(0,n.kt)("p",null,"Hold Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"hold-notification"},(0,n.kt)("span",{className:"std std-ref"},"Hold"))),(0,n.kt)("p",null,"Unhold Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"unhold-notification"},(0,n.kt)("span",{className:"std std-ref"},"UnHold"))),(0,n.kt)("p",null,"Following are the actions that the seller can take on these shipments:"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Generate labels & invoices")," : Seller requires shipping labels and invoices to process the shipment. Sellers should request for generating these labels and invoices via calling the below-mentioned API."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/pack"},(0,n.kt)("span",{className:"std std-ref"},"POST /v3/shipments/labels"))),(0,n.kt)("p",{className:"first admonition-title"},"Note"),(0,n.kt)("p",{className:"last"},"This is an async call and labels and invoices might take some time to generate and be available for download. Usually it takes 5-10 sec for labels and invoices to be available for download but sometime due to system load it might take upto 30 mins. If they are not ready for download after 30 secs then the seller can contact seller support for reporting this issue."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Cancel order")," : A seller can cancel the orders if not in a position to fulfil them. Please note, order cancellation results into that product going out of stock on Flipkart and if the number of order cancellation goes beyond a certain threshold then seller account/location will be deactivated for some duration of time i.e seller will not be allowed to sell on Flipkart for some duration of time."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/cancel-by-enforced-group-ids"},(0,n.kt)("span",{className:"std std-ref"},"POST /v3/shipments/cancel"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"PACKING_IN_PROGRESS")," :"),(0,n.kt)("p",null,"Once you have requested for the labels and invoice generation the order status moves to \u201cPACKING_IN_PROGRESS\u201d. Sellers should keep packing the products and wait for this state to change when the documents are ready for download. There is no seller action that can trigger a state change here. Once the documents are ready to download state will change to \u201cPACKED\u201d"),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"PACKED")," :"),(0,n.kt)("p",null,"The orders for which required labels and invoices are ready to download, move to this state from the \u201cPACKING_IN_PROGRESS\u201d state."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"packed-notification"},(0,n.kt)("span",{className:"std std-ref"},"Packed"))),(0,n.kt)("p",null,"Now, seller can take the following possible actions:"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Download Labels")," : A seller can download the labels, invoices, and forms generated for the respective order item to complete the packing process."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-labels"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds/labels"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Mark as \u201cReady to Dispatch\u201d")," : A seller should mark orders as \u201cReady to Dispatch\u201d once the entire order processing is complete to trigger the shipment pickup request for the logistics team."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/mark-rtd"},(0,n.kt)("span",{className:"std std-ref"},"POST /v3/shipments/dispatch"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"READY_TO_DISPATCH")," :"),(0,n.kt)("p",null,"The shipments that the sellers have successfully marked as \u201cReady to Dispatch\u201d will be in this state."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"ready-to-dispatch-notification"},(0,n.kt)("span",{className:"std std-ref"},"Ready To Dispatch"))),(0,n.kt)("p",null,"Following are the possible Seller actions:"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Download Manifest")," : A seller must download the manifest, which contains the list of orders that needs to be handed over to the logistics partner on a particular date and time."),(0,n.kt)("p",null,(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-manifest"},(0,n.kt)("span",{className:"std std-ref"},"POST /v3/shipments/manifest"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"SHIPPED")," : When the logistic partnerships the shipment to the customer, the shipment moves to this state."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"shipped-notification"},(0,n.kt)("span",{className:"std std-ref"},"Shipped"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"DELIVERED")," : When the logistic partner delivers the shipment to the customer, the shipment moves to this state."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"delivered-notification"},(0,n.kt)("span",{className:"std std-ref"},"Delivered"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"CANCELLED")," : When either the seller or the customers cancel the order. Cancellation can only happen before the shipment is shipped."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/get-shipment-details"},(0,n.kt)("span",{className:"std std-ref"},"GET /v3/shipments/:shipmentIds"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"shipment-cancelled-notification"},(0,n.kt)("span",{className:"std std-ref"},"Shipment Cancelled"))),(0,n.kt)("div",{className:"title container",id:"standard-fulfilment-return-flow-label"},(0,n.kt)("strong",null,"Return Flow")),(0,n.kt)("div",{className:"line-block"},(0,n.kt)("div",{className:"line"},(0,n.kt)("br",null))),(0,n.kt)("p",null,"Following are the different states of the order items that are returned by the customer:"),(0,n.kt)("a",{className:"reference internal image-reference",href:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-return-states.png"},(0,n.kt)("img",{alt:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-return-states.png",className:"align-center",src:"https://img1a.flixcart.com/fk-sp-static/images/standard-fulfilment-return-states.png"})),(0,n.kt)("p",null,(0,n.kt)("strong",null,"CREATED")," : When the new return is created on an approved order item id then the status of the return will be CREATED."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/2.0.0/get-returns"},(0,n.kt)("span",{className:"std std-ref"},"GET /v2/returns"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"return-created-notification"},(0,n.kt)("span",{className:"std std-ref"},"Return Created"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"COMPLETED")," : When the product is returned to the seller then the status of the return will move to COMPLETED."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/2.0.0/get-returns"},(0,n.kt)("span",{className:"std std-ref"},"GET /v2/returns"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"return-completed-notification"},(0,n.kt)("span",{className:"std std-ref"},"Return Completed"))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"CANCELLED")," : When the created return is cancelled and not expected to reach the seller location then the status of the return will move to CANCELLED."),(0,n.kt)("p",null,"API -"," ",(0,n.kt)("a",{className:"reference internal",href:"./mp-api_versioned/2.0.0/get-returns"},(0,n.kt)("span",{className:"std std-ref"},"GET /v2/returns"))),(0,n.kt)("p",null,"Notification -"," ",(0,n.kt)("a",{className:"reference internal",href:"./return-cancelled-notification"},(0,n.kt)("span",{className:"std std-ref"},"Return Cancelled"))),(0,n.kt)("p",null,"Click here to Subscribe for Notifications -"," ",(0,n.kt)("a",{className:"reference internal",href:"/docs/order-management-notifications#subscribing-to-notifications"},(0,n.kt)("span",{className:"std std-ref"},"Subscribing to Notifications")))))),(0,n.kt)("h2",{id:"self-ship-fulfilment"},"Self Ship Fulfilment"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Toggle me!"),(0,n.kt)("div",null,(0,n.kt)("div",null,(0,n.kt)("p",null,"For Self Ship fulfilment, the order item and service item state life cycle is:"),(0,n.kt)("a",{className:"reference internal image-reference",href:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfshipFwdFlow.jpg"},(0,n.kt)("img",{alt:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfshipFwdFlow.jpg",className:"align-center",src:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfshipFwdFlow.jpg"})),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Forward Flow")),(0,n.kt)("p",null,"A Self Ship order may have two aspects of fulfilment:"),(0,n.kt)("ul",{className:"simple"},(0,n.kt)("li",null,"Physical delivery of the product"),(0,n.kt)("li",null,"Post-delivery services such as assembly, installation, etc.")),(0,n.kt)("p",{className:"first admonition-title"},"Important"),(0,n.kt)("p",{className:"last"},"Sellers must ensure that they dispatch, deliver, and complete post-delivery services for the self-ship order within the respective pre-defined SLAs for the order and service item."),(0,n.kt)("table",{className:"docutils"},(0,n.kt)("thead",{valign:"bottom"},(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("th",{className:"head"},"Order Status"),(0,n.kt)("th",{className:"head"},"Details"),(0,n.kt)("th",{className:"head"},"Seller Actions"))),(0,n.kt)("tbody",{valign:"top"},(0,n.kt)("tr",{className:"row-even"},(0,n.kt)("td",null,(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Approved"))),(0,n.kt)("td",null,"New orders that the seller needs to process by marking them as \u201cDispatched\u201d and providing necessary invoicing and logistics details"),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"Cancel Order")),(0,n.kt)("p",null,"A seller can cancel these orders if not in a position to fulfill them."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Dispatch Order")),(0,n.kt)("p",{className:"last"},"A seller needs to update approved orders as \u201cDispatched\u201d by providing details of invoice (invoice number, VAT/CST percentage) and logistics (courier partner name, AWB No., expected delivery date). This must be done before the"," ",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Dispatch_By_Date"))," ","to avoid dispatch SLA breach."))),(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("td",null,(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Shipped"))),(0,n.kt)("td",null,"Dispatched orders in transit"),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"Delivery Attempt")),(0,n.kt)("p",null,"A seller can update delivery status on an order if:"," ",(0,n.kt)("strong",null,"(a)")," delivery was attempted,",(0,n.kt)("strong",null,"(b)")," customer was unavailable,"," ",(0,n.kt)("strong",null,"(c)"),"mutual agreement between the seller and customer to reschedule delivery, or ",(0,n.kt)("strong",null,"(d)"),"due to an issue at the seller\u2019s end. With this update, both the delivery attempt date and a new expected delivery date is required."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Delivery Confirmation")),(0,n.kt)("p",{className:"last"},"A seller needs to update delivery confirmation on an order after successful completion of delivery of a product to the customer. Delivery date is required with this update. This is expected to be done before the",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Deliver_By_Date"))," ","to avoid delivery SLA breach."))),(0,n.kt)("tr",{className:"row-even"},(0,n.kt)("td",null,(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Delivered"))),(0,n.kt)("td",null,"The orders that have been delivered to the customer,but are pending post-delivery service such as assembly, etc."),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"Service Attempt")),(0,n.kt)("p",null,"A seller can update service completion on an order if service was attempted but could not happen as: ",(0,n.kt)("strong",null,"(a)")," ","customer was unavailable,",(0,n.kt)("strong",null,"(b)")," there\u2019s mutual agreement between the seller and customer to reschedule service, or",(0,n.kt)("strong",null,"(c)")," there\u2019s an issue at seller\u2019s end. With this update, both service attempt date and a new expected service completion date is required."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Service Completion")),(0,n.kt)("p",{className:"last"},"A seller needs to update service confirmation on an order after successful completion of service of product to the customer. With this update, service completion date is required. This is expected to be done before",(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Service_By_Date"))," ","to avoid service SLA"))),(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("td",null,(0,n.kt)("code",{className:"docutils literal notranslate"},(0,n.kt)("span",{className:"pre"},"Completed"))),(0,n.kt)("td",null,"The orders that the sellers have successfully fulfilled to the buyer\u2019s satisfaction"),(0,n.kt)("td",null,(0,n.kt)("strong",null,"N.A."))))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Associated Actions")),(0,n.kt)("table",null,(0,n.kt)("tbody",{valign:"top"},(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"Cancel order")),(0,n.kt)("p",null,"Order: Approved \u2192 Cancelled"),(0,n.kt)("p",null,"Service: Activated \u2192 Cancelled"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Dispatch order")),(0,n.kt)("p",null,"Order: Approved \u2192 Shipped"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Delivery attempt")),(0,n.kt)("p",null,"Increase in SLA for delivery."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Confirm delivery")),(0,n.kt)("p",null,"If service item present:"),(0,n.kt)("p",null,"Order: Shipped \u2192 Delivered"),(0,n.kt)("p",null,"Service: Activated \u2192 In Progress"),(0,n.kt)("p",null,"If no service item present:"),(0,n.kt)("p",null,"Order: Shipped \u2192 Delivered \u2192 Complete"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Service attempt")),(0,n.kt)("p",null,"Increase in SLA for service completion"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Service complete")),(0,n.kt)("p",null,"Delivered \u2192 Complete"),(0,n.kt)("p",null,"Order: Delivered \u2192 Complete"),(0,n.kt)("p",{className:"last"},"Service: In Progress \u2192 Complete"))))),(0,n.kt)("div",{className:"title container"},"Returns Flow"),(0,n.kt)("p",null,"The return item lifecycle is:"),(0,n.kt)("a",{className:"reference internal image-reference",href:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfShipReturnsFlow.png"},(0,n.kt)("img",{alt:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfShipReturnsFlow.png",className:"align-center",src:"https://img1a.flixcart.com/fk-api-docs/_static/images/SelfShipReturnsFlow.png"})),(0,n.kt)("p",null,"Self Ship returns are of two types:"),(0,n.kt)("ul",{className:"simple"},(0,n.kt)("li",null,"Courier returns (RVP)",(0,n.kt)("ul",null,(0,n.kt)("li",null,"Created due to buyer cancellations while the product is in transit to the customers"),(0,n.kt)("li",null,"Customers can cancel the order any time depending on the cancellation policy associated with the product"),(0,n.kt)("li",null,"These returns must be acknowledged or cancelled by sellers after verification of the product delivery status"),(0,n.kt)("li",null,"If courier return is approved, seller needs to ensure it is not delivered to the customer and brought back to the warehouse"),(0,n.kt)("li",null,"If courier return is cancelled, the forward fulfilment order item is updated as delivered"))),(0,n.kt)("li",null,"Customer returns (RTO)",(0,n.kt)("ul",null,(0,n.kt)("li",null,"Created after delivery of the product to customers"),(0,n.kt)("li",null,"Customers can request a return due to an issue with service (assembly/installation), quality (bad/defective/damaged) product, or due to wrong shipment"),(0,n.kt)("li",null,"These returns must be approved or rejected by sellers after the a tech visit (or troubleshooting), as applicable"),(0,n.kt)("li",null,"If returns are approved, seller needs to ensure product pickup from the customer"),(0,n.kt)("li",null,"If returns are approved and a replacement order has been created, seller needs to fulfill it as any other Self Ship order"),(0,n.kt)("li",null,"Any order cancelled in between the OFD to delivery completed state will be marked as a customer return not a courier return")))),(0,n.kt)("div",{className:"wy-table-responsive"},(0,n.kt)("table",{border:1,className:"docutils"},(0,n.kt)("colgroup",null,(0,n.kt)("col",{width:"18%"}),(0,n.kt)("col",{width:"33%"}),(0,n.kt)("col",{width:"49%"})),(0,n.kt)("thead",{valign:"bottom"},(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("th",{className:"head"},"Return Status"),(0,n.kt)("th",{className:"head"},"Details"),(0,n.kt)("th",{className:"head"},"Seller Actions"))),(0,n.kt)("tbody",{valign:"top"},(0,n.kt)("tr",{className:"row-even"},(0,n.kt)("td",null,(0,n.kt)("strong",null,"Requested")),(0,n.kt)("td",null,"These are typically customer returns (RVP) that need your attention in terms of tech visit/troubleshooting the issue customer is facing. Post completion of tech visit, the seller needs to approve or reject the return."),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"RVP: Tech Visit Attempt")),(0,n.kt)("p",null,"A seller can update tech visit attempt on a return tech visit service item in case troubleshooting was attempted but could not happen due to customer unavailability, mutual agreement between seller and customer to reschedule tech visit or due to some issue at seller\u2019s end."),(0,n.kt)("p",null,"With this update, tech visit attempt date as well as a new expected tech visit date is required."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"RVP: Approve Return"),"A seller can mark a customer return as approved post completion of tech visit. This is expected to be done before Tech_Visit_By date to avoid tech visit completion SLA breach."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"RVP: Reject Return")),(0,n.kt)("p",null,"A seller can mark a customer return as rejected post completion of tech visit."),(0,n.kt)("p",{className:"last"},"This is expected to be done before Tech_Visit_By date to avoid tech visit completion SLA breach."))),(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("td",null,(0,n.kt)("strong",null,"Approved")),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},"These returns can either be approved customer returns (RVP) or courier returns (RTOs)."),(0,n.kt)("p",null,"In case of customer returns, reverse pickup confirmation is required to complete the return."),(0,n.kt)("p",{className:"last"},"In case of courier returns, RTO acknowledgement or cancellation is required to complete or close the return.")),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"RVP: Reverse Pickup Attempt")),(0,n.kt)("p",null,"A seller can update reverse pickup attempt on an approved customer return in case pickup was attempted but could not happen due to customer unavailability, mutual agreement between seller and customer to reschedule reverse pickup or due to some issue at seller\u2019s end."),(0,n.kt)("p",null,"With this update, reverse pickup attempt date as well as a new expected reverse pickup date is also required."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"RVP: Reverse Pickup Confirmation")),(0,n.kt)("p",null,"A seller needs to update a customer return as completed post confirmation of reverse pickup."),(0,n.kt)("p",null,"This is expected to be done before Reverse_Pickup_By date to avoid return completion SLA breach."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"RTO: Acknowledge RTO")),(0,n.kt)("p",null,"A seller needs to acknowledge buyer cancellation and confirm RTO after ensuring the product is not delivered to customer."),(0,n.kt)("p",null,(0,n.kt)("strong",null,"RTO: Cancel RTO")),(0,n.kt)("p",null,"A seller needs to cancel an RTO in case the product has been delivered to customer."),(0,n.kt)("p",{className:"last"},"With this update, the forward product is to be confirmed as delivered and the delivery date is required as an input."))),(0,n.kt)("tr",{className:"row-even"},(0,n.kt)("td",null,(0,n.kt)("strong",null,"Completed")),(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},"The returns that have been successfully closed by the sellers."),(0,n.kt)("p",{className:"last"},"Can include completed customer returns, acknowledged courier returns, rejected customer returns and cancelled courier returns.")),(0,n.kt)("td",null,(0,n.kt)("strong",null,"N.A.")))))),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Associated Actions")),(0,n.kt)("div",{className:"wy-table-responsive"},(0,n.kt)("table",{border:1,className:"docutils"},(0,n.kt)("colgroup",null,(0,n.kt)("col",{width:"100%"})),(0,n.kt)("tbody",{valign:"top"},(0,n.kt)("tr",{className:"row-odd"},(0,n.kt)("td",null,(0,n.kt)("p",{className:"first"},(0,n.kt)("strong",null,"Cancel Courier Return")),(0,n.kt)("p",null,"Return: Return Approved \u2192 Return Cancelled"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Acknowledge Courier Return")),(0,n.kt)("p",null,"Return: Return Approved \u2192 Return Completed"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Return Tech Visit Attempt")),(0,n.kt)("p",null,"Increase in SLA for tech visit completion"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Return Tech visit complete and Return approval")),(0,n.kt)("p",null,"Service: Service Requested \u2192 Service Completed"),(0,n.kt)("p",null,"Return: Return Requested \u2192 Return Approved"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Return Tech visit complete and Return rejected")),(0,n.kt)("p",null,"Service: Service Requested \u2192 Service Cancelled"),(0,n.kt)("p",null,"Return: Return Requested \u2192 Return Rejected"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Reverse Pick up Attempt")),(0,n.kt)("p",null,"Increase in SLA for reverse pick up"),(0,n.kt)("p",null,(0,n.kt)("strong",null,"Reverse Pick up Complete")),(0,n.kt)("p",{className:"last"},"Return: Return Approved \u2192 Return Completed"))))))))),(0,n.kt)("h2",{id:"complete-list-of-order-management-pull-apis"},"Complete List of Order Management Pull APIs"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Format"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"JSON")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Protocol"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"HTTPS")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"API"),(0,n.kt)("th",{parentName:"tr",align:null},"Description/Use Case"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/search-pre-dispatch-shipment-post"},"POST /v3/shipments/filter/")),(0,n.kt)("td",{parentName:"tr",align:null},"Search shipments based on dates, state, seller SKU ID, or ",(0,n.kt)("inlineCode",{parentName:"td"},"shipmentId")),(0,n.kt)("td",{parentName:"tr",align:null},"Common")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-shipment-details"},"GET /v3/shipments?shipmentIds={} or, GET /v3/shipments?orderItemIds={} or, GET /v3/shipments?orderIds={}")),(0,n.kt)("td",{parentName:"tr",align:null},"Get shipment details based on the ",(0,n.kt)("inlineCode",{parentName:"td"},"shipmentId"),"/",(0,n.kt)("inlineCode",{parentName:"td"},"orderItemId"),"/",(0,n.kt)("inlineCode",{parentName:"td"},"orderId")),(0,n.kt)("td",{parentName:"tr",align:null},"Common")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/pack"},"POST /v3/shipments/labels")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark shipments as packed and generate labels"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-labels"},"GET /v3/shipments/:shipmentIds/labels")),(0,n.kt)("td",{parentName:"tr",align:null},"Print shipping labels"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-labels-only-pdf"},"POST /v3/shipments/:shipmentIds/labelOnly/pdf")),(0,n.kt)("td",{parentName:"tr",align:null},"Download labels in PDF format for shipments"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-labels-only"},"POST /v3/shipments/:shipmentIds)/labelOnly")),(0,n.kt)("td",{parentName:"tr",align:null},"Download labels in Byte-Stream for shipments"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/mark-rtd"},"POST /v3/shipments/dispatch")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark shipments as \u201cReady to Dispatch\u201d"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-shipment-details"},"GET /v3/shipments/:shipmentIds")),(0,n.kt)("td",{parentName:"tr",align:null},"Get shipment information of shipment ids"),(0,n.kt)("td",{parentName:"tr",align:null},"Common")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-invoices-pdf-from-esi"},"GET /v3/shipments/:shipmentIds/invoices")),(0,n.kt)("td",{parentName:"tr",align:null},"Get invoice information of shipment ids"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/cancel-by-enforced-group-ids"},"POST /v3/shipments/cancel")),(0,n.kt)("td",{parentName:"tr",align:null},"Cancel an approved shipment"),(0,n.kt)("td",{parentName:"tr",align:null},"Common")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-mandatory-forms"},"GET /v3/shipments/:shipmentIds/forms")),(0,n.kt)("td",{parentName:"tr",align:null},"Get forms associated with a shipment"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/update-ack-number"},"POST /v3/shipments/forms/updateAck")),(0,n.kt)("td",{parentName:"tr",align:null},"Update ACK number and process form failed shipment"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-vendor-group-details"},"GET /v3/shipments/handover/counts?locationId=:location_id")),(0,n.kt)("td",{parentName:"tr",align:null},"Get vendor pick up details"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-manifest"},"POST /v3/shipments/manifest")),(0,n.kt)("td",{parentName:"tr",align:null},"Get manifest based on vendor"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/get-reverse-otc"},"GET /v3/shipments/otc/:locationId?requestType=:requestType")),(0,n.kt)("td",{parentName:"tr",align:null},"Get OTC details"),(0,n.kt)("td",{parentName:"tr",align:null},"Standard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/submit-self-shipt-dispatch-request"},"POST /v3/shipments/selfShip/dispatch")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark dispatch on Self Ship item"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/submit-self-ship-delivery-request"},"POST /v3/shipments/selfShip/delivery")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark Self Ship item as delivered"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/submit-self-ship-deliver-attempt-request"},"POST /v3/shipments/selfShip/deliveryAttempt")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark delivery attempt on Self Ship item"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/submit-service-attempt-request"},"POST /v2/services/attempt")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark service attempt detail"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/submit-service-complete-request"},"POST /v2/services/complete")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark service as completed"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/submit-service-complete-request"},"POST /v2/services/complete")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark service as completed"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/get-returns"},"GET /v2/returns")),(0,n.kt)("td",{parentName:"tr",align:null},"Get the details of order items returned"),(0,n.kt)("td",{parentName:"tr",align:null},"Common")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/approve-self-ship-returns"},"POST /v2/returns/approve")),(0,n.kt)("td",{parentName:"tr",align:null},"Approve Self Ship returns"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/reject-self-ship-returns"},"POST /v2/returns/reject")),(0,n.kt)("td",{parentName:"tr",align:null},"Reject Self Ship returns"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/return-complete"},"POST /v2/returns/complete")),(0,n.kt)("td",{parentName:"tr",align:null},"Acknowledge Self Ship RVP returns"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/pickup"},"POST /v2/returns/pickup")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark Self Ship retuns as picked up"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/mp-api_versioned/2.0.0/pickup-attempt"},"POST /v2/returns/pickupAttempt")),(0,n.kt)("td",{parentName:"tr",align:null},"Mark pickup attempt on Self Ship returns"),(0,n.kt)("td",{parentName:"tr",align:null},"Self Ship")))))}m.isMDXComponent=!0}}]);