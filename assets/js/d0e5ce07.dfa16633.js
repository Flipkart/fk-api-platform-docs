"use strict";(self.webpackChunkfk_api_platform_docs=self.webpackChunkfk_api_platform_docs||[]).push([[5775],{66056:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={sidebar_position:7},o="Order Management Notification Service",l={unversionedId:"order-management-notifications",id:"order-management-notifications",title:"Order Management Notification Service",description:"The Order Management Notification Service provides support for notifications, to be sent from the Flipkart system to the seller system, for any event in a shipment lifecycle, such as shipment creation, label creation, shipment cancellation, and so on. You can use this feature to improve the performance of your application by eliminating additional network and computation costs in polling resources to determine if they have changed.",source:"@site/docs/order-management-notifications.md",sourceDirName:".",slug:"/order-management-notifications",permalink:"/fk-api-platform-docs/docs/order-management-notifications",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Order Management API",permalink:"/fk-api-platform-docs/docs/order-management-intro"},next:{title:"Order Management Notifications Reference",permalink:"/fk-api-platform-docs/docs/order-management-notifications-reference"}},s={},d=[{value:"Subscribing to Notifications",id:"subscribing-to-notifications",level:2},{value:"Notifications Authentication",id:"notifications-authentication",level:2},{value:"Authentication Sample",id:"authentication-sample",level:2},{value:"Notifications Response",id:"notifications-response",level:2}],p={toc:d},m="wrapper";function c(t){let{components:e,...n}=t;return(0,i.kt)(m,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"order-management-notification-service"},"Order Management Notification Service"),(0,i.kt)("p",null,"The Order Management Notification Service provides support for notifications, to be sent from the Flipkart system to the seller system, for any event in a shipment lifecycle, such as shipment creation, label creation, shipment cancellation, and so on. You can use this feature to improve the performance of your application by eliminating additional network and computation costs in polling resources to determine if they have changed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Format"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Notification"),(0,i.kt)("th",{parentName:"tr",align:null},"Description/Use Case"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Shipment Created"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order is placed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Hold"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item is flagged as \u201cHold\u201d")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"UnHold"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item flagged as \u201cHold\u201d is released for further processing")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Packed"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item state is changed to \u201cPacked\u201d")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Ready To Dispatch"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item is marked as \u201cReady to Dispatch\u201d")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Pickup Complete"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when the shipment is picked up by the logistics team")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Shipped"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item is shipped")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Delivered"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an order item is delivered")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Dispatch Dates Changed"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when the dispatch date is changed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Shipment Cancelled"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an approved order is cancelled")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Shipment Form Failed"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when a form generation fails")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return Created"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when a new return request is created")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return Tracking Id Update"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when an when tracking details for a customer return is updated")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return Expected Date Changed"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when the expected date of return of an orderItem changes")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return PickedUp"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when a return is picked up")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return Completed"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when a return is completed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Return Cancelled"),(0,i.kt)("td",{parentName:"tr",align:null},"Sent when a return request is revoked")))),(0,i.kt)("h2",{id:"subscribing-to-notifications"},"Subscribing to Notifications"),(0,i.kt)("p",null,"To use notifications:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You must be a registered seller on ",(0,i.kt)("a",{parentName:"li",href:"https://seller.flipkart.com"},"https://seller.flipkart.com"),"."),(0,i.kt)("li",{parentName:"ul"},"Setup a notification receiver in your system. This is an HTTPS server that handles the API notifications triggered when a resource changes. For example: ",(0,i.kt)("a",{parentName:"li",href:"https://www."},"https://www."),"< your-website >.com/notifications-receiver."),(0,i.kt)("li",{parentName:"ul"},"You should have a VAPT certificate for the notification receiver in your system.")),(0,i.kt)("p",null,"Write to ",(0,i.kt)("a",{parentName:"p",href:"mailto:seller-api-queries@flipkart.com"},"seller-api-queries@flipkart.com")," to subscribe to the notifications. Please provide the following details:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Seller id / Seller registered email address"),(0,i.kt)("li",{parentName:"ul"},"Notification receiver URL"),(0,i.kt)("li",{parentName:"ul"},"VAPT certificate for the URL"),(0,i.kt)("li",{parentName:"ul"},"If return notifications are needed (Yes / NO)"),(0,i.kt)("li",{parentName:"ul"},"If Yes then Notification receiver URL for return notification( This could be same as order notification URL)"),(0,i.kt)("li",{parentName:"ul"},"If return notification URL is different then provide VAPT certificate for the URL"),(0,i.kt)("li",{parentName:"ul"},"Location ids for which you wants to listen order and return notifications")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Even if you are a 3rd party aggregator you need to provide seller id / seller registered email address for which you will consume the events.")),(0,i.kt)("p",null,"The proposed event structure for these notifications contain the following parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eventType")),(0,i.kt)("td",{parentName:"tr",align:null},"The notification type. Possible values: ",(0,i.kt)("inlineCode",{parentName:"td"},"shipment_created"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"shipment_packed"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"shipment_ready_to_dispatch"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"shipment_shipped"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"shipment_delivered"),", and so on")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:null},"Point of origin of the notification - ",(0,i.kt)("inlineCode",{parentName:"td"},"flipkart"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"timestamp")),(0,i.kt)("td",{parentName:"tr",align:null},"ISO time string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"attributes")),(0,i.kt)("td",{parentName:"tr",align:null},"Custom parameters for the event")))),(0,i.kt)("h2",{id:"notifications-authentication"},"Notifications Authentication"),(0,i.kt)("p",null,"All Flipkart Notifications are RESTful notifications that send event payloads to the seller system endpoint."),(0,i.kt)("p",null,"Sellers authenticate to Flipkart API using OAuth credentials (",(0,i.kt)("inlineCode",{parentName:"p"},"Application ID")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Application Secret"),"). Those who wish to listen to notifications must register their notification endpoints with Flipkart. Sellers need a mechanism to validate whether the request originated from Flipkart and not by untrusted sources. Flipkart REST APIs authenticate to seller notification endpoints using a signature-based authentication by using Authorization headers."),(0,i.kt)("p",null,"Every notification includes headers in the following format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"X_Date : <date_timestamp>\nX_Authorization : FKLOGIN  Base64 (OAuth-appid : <fk_signature>)\n")),(0,i.kt)("p",null,"Here,"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"date_timestamp")," is the timestamp at which the notification is generated and is in \u201cHTTP-Date\u201d format.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fk_signature")," is generated per request using SHA1 based message digest algorithm with values derived from request as:"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 (date_timestamp + notification_http_url + notification_http_method + OAuth-secret)")),(0,i.kt)("p",null,"REST endpoints that receive these notifications need to authenticate the request by regenerating the Signature (",(0,i.kt)("inlineCode",{parentName:"p"},"fk_signature"),") using the logic above and verifying it with the Authorization (",(0,i.kt)("inlineCode",{parentName:"p"},"X_Authorization"),") header. Consider the following example."),(0,i.kt)("h2",{id:"authentication-sample"},"Authentication Sample"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Seller: PilotSeller\nOAuth Appication ID: 6113ca4a-fe05-11e4-a322-1697f925ec7b\nOAuth Application Secret: 669a57f4-fe05-11e4-a322-1697f925ec7b\nNotification URL: http://seller.api.pilotseller.com/notify/fki POST\nTimestamp: 1432026135\nSignature:\nSHA1(1432026135http://seller.api.pilotseller.com/notify/fkiPOST669a57f4-fe05-11e4-a322-1697f925ec7b) 83762abd87b41e66ddd58320a4e803251e72b776\nAuthorization Information:\nBase64(6113ca4a-fe05-11e4-a322-1697f925ec7b:83762abd87b41e66ddd58320a4e803251e72b776)NjExM2NhNGEtZmUwNS0xMWU0LWEzMjItMTY5N2Y5MjVlYzdiOjgzNzYyYWJkODdiNDFlNjZkZGQ1ODMyMGE0ZTgwMzI1MWU3MmI3NzY=\nHeaders\nX_Date: Tue, 19 May 2015 09:02:15 GMT\nX_Authorization:\nFKLOGIN NjExM2NhNGEtZmUwNS0xMWU0LWEzMjItMTY5N2Y5MjVlYzdiOjgzNzYyYWJkODdiNDFlNjZkZGQ1ODMyMGE0ZTgwMzI1MWU3MmI3NzY=\n")),(0,i.kt)("h2",{id:"notifications-response"},"Notifications Response"),(0,i.kt)("p",null,"For a notification, the seller application needs to respond with a standard HTTP success status 200, or should throw an error response in the following scenarios only:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When the seller system is down"),(0,i.kt)("li",{parentName:"ul"},"If the payload is incorrect")),(0,i.kt)("p",null,"The notification system ensures that the message is sent at least once, but not only once. Hence, it is recommended to add an idempotency check in the client to avoid processing of duplicate notifications."))}c.isMDXComponent=!0}}]);